---
title: "A Lei dos Gases Ideais e o pacote `anim.plots`"
format: html
editor: source
---

## Animações dentro do Rstudio

|       Alguns pacotes produzem animações ou simulações dentro do *RStudio*; outros o fazem separadamente, em arquivos *HTML* que podem atuar de forma independente. Para exemplificar o primeiro grupo, de pacotes que rodam animações internamente no *RStudio*, vamos iniciar com o pacote `anim.plots`.

## Um gráfico básico

|       Para entender como funciona o pacote `anim.plots`, vamos primeiro produzir um gráfico básico

```{r}
x <- 1:5 # cinco valores de "x", 1 a 1
y <- x^2 # valores de "y" como quadrado de "x"
plot(x,y) # gráfico dos pontos
```

|       Incrementando um pouco o gráfico:

```{r}
plot(x,y,col="darkgreen", cex=2, pch=15, type="o") # cex é tamanho do ponto, pch é tipo de ponto, type represente se ponto (p), linha (l) ou ambos (o)
```

### Animando o gráfico

|       Agora podemos acrescentar alguma animação ao *plot*. Por exemplo, podemos gerar um arquivo de imagem animado, ou *gif animado* a partir do gráfico anterior, como segue:

```{r}
library(anim.plots)
anim.curve(x^t, times=1:5, n=5, type="p")
```

|       Veja que *o programa produziu 5 gráficos*, um embaixo do outro. Isso *não é propriamente uma animação*, mas uma limitação do pacote: o `anim.plots` só produz animação *dentro do RStudio, e não em página separada de um navegador*. Contudo, para converter essa sequência de gráficos em uma animação em arquivo separado, basta salvá-lo com o comando abaixo:

```{r}
sequencia <- anim.curve(x^t, times=1:5, n=5, type="o", col="darkgreen", cex=2, pch=15)
anim.save(sequencia, "sequencia.gif")
```

|       Pra testar, clique na aba *Files* (canto direito do Rstudio), procure o arquivo *"sequencia.gif"*, e clique uma vez para abrir a animação

## Uma situação prática: a Lei dos Gases Ideais em função da temperatura

|       Por definição, a *Lei dos Gases Ideais* de Clayperon nos define a seguinte relação entre as quantidades termodinâmicas que seguem:

$$
p*V = n*R*T
$$ {#eq-eq-pv1}

|       Nesse caso, pode-se representar *p* em função de *V*:

$$
p = \frac{n*R*T}{V}
$$ {#eq-eq-pv2}

|       Onde:

-   p = pressão (variável dependente)
-   V = volume (variável independente); no `anim.plots` é *"x"*
-   n = no. de mols (no exemplo, 1)
-   R = constante geral dos gases ideais, 8,314 J/mol/K
-   T = temperatura (K); no `anim.plots` será considerado o parâmetro de variação, sendo denominado *"t"* por padrão do pacote
 

|       Uma imagem representativa da relação de gases ideia a determinada temperatura (*isotérmica*) pode ser representada na figura que segue:

![Representação de uma transformação isotérmica de um gás ideal (fonte: Wikipedia)](gases_ideais.png)

|       Agora define-se uma função para *curva* no pacote `anim.plots`, e aplica-se a equação acima:

```{r}
library(anim.plots)

R = 8.314 # J/mol/K
n = 1
V = seq(from=0.1, to=1, by=0.1)
t = c(237, 273, 300, 325, 340) # temperatura, K

anim.curve(n*R*t/x, times=1:5, n=5, type="o", 
           col="darkblue", cex=2, pch=17,
           xlab="V", ylab="p")  
```

|       Finalmente, pode-se salvar a sequência num *gif animado* pra apresentar a imagem dinâmica para outras pessoas:

```{r, eval=FALSE}
anim.gas.ideal <- anim.curve(n*R*t/x, 
                             times=1:5, n=5, type="o",
                             col="darkblue", cex=2, pch=17,
                             xlab="V", ylab="p") 
anim.save(anim.gas.ideal, "anim.gas.ideal.gif")
```

### Variando alguns comandos do `anim.plots`

|       É possível incrementar bastante a visualização com o pacote `anim.plots`. Exemplificando:

#### Variando a velocidade entre os quadros (*frames*)

```{r, eval=FALSE}
anim.gas.ideal <- anim.curve(n*R*t/x, 
                             times=1:5, n=5, type="o",
                             col="darkblue", cex=2, pch=17,
                             xlab="V", ylab="p",
                             speed = 5)
anim.save(anim.gas.ideal, "anim.gas.ideal.speed.gif")
```

### Comandos utilizados no tutorial

-   anim.plot
-   anim.curve
-   anim.save

### Referência pra consulta:

Pacote [`anim.plots`](https://cran.r-project.org/web/packages/anim.plots/index.html), e em especial o [vignette](https://hughjonesd.github.io/anim.plots/anim.plots.html) que apresenta os modelos animados.
